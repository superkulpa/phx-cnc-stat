; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "CNC_stat"
#define MyAppVersion "1.01"
#define MyAppPublisher "Autogenmash"
#define MyAppURL "www.autogenmash.ru"
#define MyAppExeName "statistic.exe"
#define MyAppIconName "statistic.exe"
#define target "full"


[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={#MyAppName}
;{{15F1B412-FC26-4F3D-8B9C-2BCCE0F96741}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\{#MyAppName}
;{pf}
DefaultGroupName={#MyAppName}
OutputBaseFilename=setup_{#MyAppName}_v{#MyAppVersion}
Compression=lzma
SolidCompression=yes

[Languages]
Name: "russian"; MessagesFile: "compiler:Languages\Russian.isl"

[Files]
Source: psvince.dll; Flags: dontcopy

[Code]
function IsModuleLoaded(modulename: String): Boolean;
external 'IsModuleLoaded@files:psvince.dll stdcall';
 
function InitializeSetup(): Boolean;
//var
  //ResultCode: integer;
  //ResultStr: string;
begin
 Result:=true;
end;

function NextButtonClick(CurPage: Integer): Boolean;
begin
 Result:=True;
 If CurPage=10 then
 begin
 if(FileExists(ExpandConstant('{app}\settings.xml')))
  then
  begin
    CreateDir(ExpandConstant('{app}\backup\'));
    FileCopy(ExpandConstant('{app}\settings.xml'),ExpandConstant('{app}\backup\settings.xml'),false);
  end;
 end;
 If CurPage=14 then
 begin
 if(FileExists(ExpandConstant('{app}\backup\settings.xml')))
  then
  begin
    FileCopy(ExpandConstant('{app}\backup\settings.xml'),ExpandConstant('{app}\settings.xml'),false);
    DelTree(ExpandConstant('{app}\backup\'), True, True, True);
    RemoveDir(ExpandConstant('{app}\backup\'));
  end;
 end;
end;


[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
                                                 
[Files]
;Source: "install\vms.exe"; DestDir: "{app}"; Flags: ignoreversion
; Source: "install\*"; Excludes: "*.odt,��������� ��*,*.log,abonents\*,settings.xml"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "install\*"; Excludes: "logs\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{#MyAppName}"; IconFilename: "{app}\{#MyAppIconName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{commondesktop}\{#MyAppName}";  IconFilename: "{app}\{#MyAppIconName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon
Name: "{group}\Uninstall {#MyAppName}"; Filename: "{uninstallexe}"

[Run]

;Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, "&", "&&")}}"; Flags: nowait postinstall skipifsilent

